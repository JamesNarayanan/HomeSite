{"version":3,"sources":["img/reactLogo.svg","img/pythonLogo.svg","img/javaLogo.svg","img/cppLogo.svg","components/SwirlElement.js","components/SwirlElementInfo.js","Swirl.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SwirlElement","props","iconWidth","screenWidth","opacity","src","icon","alt","className","onClick","onLogoClick","number","style","left","top","width","display","transform","cursor","zIndex","inFocus","fontSize","color","name","projects","map","project","href","link","SwirlElementInfo","reactLogo","javaLogo","pythonLogo","cppLogo","Swirl","useState","scrollY","setScrollY","window","addEventListener","pageYOffset","innerWidth","setScreenWidth","innerHeight","screenHeight","setScreenHeight","degToRad","angle","Math","PI","currentSwirlEl","swirlElements","radii","x","y","i","scrollTo","pixPerRotate","behavior","length","relativeAngle","cos","sin","abs","push","document","documentElement","backgroundColor","transition","Helmet","id","height","fontFamily","bottom","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,2MCmE5BC,MAjEf,SAAsBC,GACrB,IAAIC,EAAY,IAKhB,OAJID,EAAME,aAAe,IAAKD,EAAYD,EAAME,YAAc,IACrDF,EAAME,aAAe,OAAMD,EAAYD,EAAME,YAAc,GACpED,GAAwBA,GAAa,EAAID,EAAMG,SAAW,GAGzD,oCACC,yBACCC,IAAKJ,EAAMK,KACXC,IAAI,GACJC,UAAU,2BACVC,QAAS,kBAAMR,EAAMS,YAAYT,EAAMU,SACvCC,MAAO,CACNC,KAAMZ,EAAMY,KACZC,IAAKb,EAAMa,IACXC,MAAOb,EAAY,KACnBE,QAASH,EAAMG,QACfY,QAASf,EAAMG,QAAU,EAAI,UAAY,OACzCa,UAAW,wBACXC,OAAQ,UACRC,OAAQ,OAGTlB,EAAMmB,SACN,yBACCZ,UAAU,6BACVI,MAAO,CACNE,IAAK,OACLD,KAAM,OACNE,MAAO,OACPE,UAAW,uBAGZ,wBACCL,MAAO,CACNS,SAAU,SACVC,MAAO,UAGPrB,EAAMsB,MAER,yBACCX,MAAO,CACNS,SAAU,SAGX,uCACA,6BACA,6BACEpB,EAAMuB,SAASC,KAAI,SAAAC,GACnB,OACC,yBAAKlB,UAAU,WACd,uBAAGmB,KAAMD,EAAQE,MAAOF,EAAQH,e,gECJ3BM,EA9CU,CACxB,CACCN,KAAM,QACND,MAAO,OACPhB,KAAMwB,IACNN,SAAU,CACT,CAACD,KAAM,YAAaK,KAAM,wBAC1B,CAACL,KAAM,UAAWK,KAAM,8CAG1B,CACCL,KAAM,OACND,MAAO,UACPhB,KAAMyB,IACNP,SAAU,CACT,CACCD,KAAM,2BACNK,KAAM,qDAEP,CAACL,KAAM,eAAgBK,KAAM,8CAG/B,CACCL,KAAM,SACND,MAAO,OACPhB,KAAM0B,IACNR,SAAU,CACT,CACCD,KAAM,gBACNK,KAAM,sDAIT,CACCL,KAAM,MACND,MAAO,UACPhB,KAAM2B,IACNT,SAAU,CACT,CACCD,KAAM,2BACNK,KAAM,wD,OCqFKM,MA3Hf,WAAkB,IAAD,EACcC,mBAAS,GADvB,mBACTC,EADS,KACAC,EADA,KAEhBC,OAAOC,iBAAiB,UAAU,WACjCF,EAAWC,OAAOE,gBAHH,MAKsBL,mBAASG,OAAOG,YALtC,mBAKTtC,EALS,KAKIuC,EALJ,OAMwBP,mBAASG,OAAOK,aANxC,mBAMTC,EANS,KAMKC,EANL,KAOhBP,OAAOC,iBAAiB,UAAU,WACjCG,EAAeJ,OAAOG,YACtBI,EAAgBP,OAAOK,gBAIxB,IAAMG,EAAW,SAAAC,GAAK,OAAIA,GAASC,KAAKC,GAAK,MAKzCC,EAAiB,EACjBC,EAAgB,GAOhBC,EAAQ,CACXC,EAAG,GAAKlD,EAAc,IACtBmD,EAAG,GAAKV,EAAe,KAEpBQ,EAAME,EAAI,KAAIF,EAAME,EAAI,IAK5B,IAHA,IAAM5C,EAAc,SAAA6C,GACnBjB,OAAOkB,SAAS,CAAC1C,IAAM2C,IAAoBF,EAAGG,SAAU,YAEhDH,EAAI,EAAGA,EAAI1B,EAAiB8B,OAAQJ,IAAK,CACjD,IAAIR,EAAe,IAAPX,EAAiC,GAAK,GAAKmB,EACnDK,EAAgBb,EAAQ,IACxBlC,EAAI,sBAAkBuC,EAAMC,EAAxB,gBAAiCL,KAAKa,IAAIf,EAASC,IAAnD,KACJjC,EAAG,sBAAkBsC,EAAME,EAAxB,gBAAiCN,KAAKc,IAAIhB,EAASC,IAAnD,KAGH3C,EAAO,UACV2C,IAFmB,IAEQA,GAAS,IACjC,EAAIC,KAAKe,IAAI,GAAKH,GAAd,IACJ,GAGAxC,EAAUwC,GAAiB,IAAMA,EAAgB,IAErDV,EAAiB9B,EAAUmC,EAAIL,EAE/BC,EAAca,KACb,kBAAC,EAAD,CACCzC,KAAMM,EAAiB0B,GAAGhC,KAC1BjB,KAAMuB,EAAiB0B,GAAGjD,KAC1BO,KAAMA,EACNC,IAAKA,EACLV,QAASA,EACTgB,QAASA,EACTI,SAAUK,EAAiB0B,GAAG/B,SAC9Bb,OAAQ4C,EACRpD,YAAaA,EACbO,YAAaA,KAWhB,OALAuD,SAASC,gBAAgBtD,MAAMuD,gBAC9BtC,EAAiBqB,GAAgB5B,MAElC2C,SAASC,gBAAgBtD,MAAMwD,WAAa,OAG3C,oCACC,kBAACC,EAAA,EAAD,KACC,mDAED,yBACCC,GAAG,YACH1D,MAAO,CACN2D,OAAO,QAAD,OACJd,KAAqBN,EAAcQ,OAAS,GADxC,iBAKP,yBACCnD,UAAU,iCACVI,MAAO,CACNwD,WAAW,OACXD,gBAAiBtC,EAAiBqB,GAAgB5B,MAClDiD,OAAQ,UAGRpB,GAEF,yBACC3C,UAAU,6CACVI,MAAO,CACNE,IAAK,MACL0D,WAAY,iBAGb,4BACC,uBAAG7C,KAAK,qCAAR,qBAGF,yBACCnB,UAAU,6CACVI,MAAO,CACN6D,OAAQ,MACRL,WAAY,QACZhE,QAASgC,EAAU,IAAM,EAAI,IAG9B,yDC/GUsC,MARf,WACC,OACC,yBAAKlE,UAAU,OACd,kBAAC,EAAD,QCKiBmE,QACW,cAA7BrC,OAAOsC,SAASC,UAEe,UAA7BvC,OAAOsC,SAASC,UAEhBvC,OAAOsC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDhB,SAASiB,eAAe,SDwHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f5f104f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactLogo.dd239681.svg\";","module.exports = __webpack_public_path__ + \"static/media/pythonLogo.26252803.svg\";","module.exports = __webpack_public_path__ + \"static/media/javaLogo.03d4f533.svg\";","module.exports = __webpack_public_path__ + \"static/media/cppLogo.c8dcec0d.svg\";","import React from \"react\";\n\nfunction SwirlElement(props) {\n\tvar iconWidth = 300;\n\tif (props.screenWidth <= 600) iconWidth = props.screenWidth / 2.5;\n\telse if (props.screenWidth <= 1200) iconWidth = props.screenWidth / 4;\n\ticonWidth = iconWidth - iconWidth * (1 - props.opacity) * 0.9;\n\n\treturn (\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={props.icon}\n\t\t\t\talt=\"\"\n\t\t\t\tclassName=\"swirlLogo position-fixed\"\n\t\t\t\tonClick={() => props.onLogoClick(props.number)}\n\t\t\t\tstyle={{\n\t\t\t\t\tleft: props.left,\n\t\t\t\t\ttop: props.top,\n\t\t\t\t\twidth: iconWidth + \"px\",\n\t\t\t\t\topacity: props.opacity,\n\t\t\t\t\tdisplay: props.opacity > 0 ? \"initial\" : \"none\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\tzIndex: \"1\"\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{props.inFocus && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"position-fixed text-center\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: \"50vh\",\n\t\t\t\t\t\tleft: \"50vw\",\n\t\t\t\t\t\twidth: \"90vw\",\n\t\t\t\t\t\ttransform: \"translate(-50%, 0)\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h1\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: \"3.5rem\",\n\t\t\t\t\t\t\tcolor: \"black\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.name}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: \"2rem\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<u>Projects</u>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{props.projects.map(project => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"project\">\n\t\t\t\t\t\t\t\t\t\t<a href={project.link}>{project.name}</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default SwirlElement;\n","import reactLogo from \"../img/reactLogo.svg\";\nimport pythonLogo from \"../img/pythonLogo.svg\";\nimport javaLogo from \"../img/javaLogo.svg\";\nimport cppLogo from \"../img/cppLogo.svg\";\n\nconst SwirlElementInfo = [\n\t{\n\t\tname: \"React\",\n\t\tcolor: \"cyan\",\n\t\ticon: reactLogo,\n\t\tprojects: [\n\t\t\t{name: \"RoboGuide\", link: \"https://roboguide.tk\"},\n\t\t\t{name: \"Weather\", link: \"https://jamesnarayanan.github.io/weather\"}\n\t\t]\n\t},\n\t{\n\t\tname: \"Java\",\n\t\tcolor: \"#ff4444\",\n\t\ticon: javaLogo,\n\t\tprojects: [\n\t\t\t{\n\t\t\t\tname: \"2020 FIRST Robotics Code\",\n\t\t\t\tlink: \"https://github.com/Team41Robotics/2020-Robot-Code\"\n\t\t\t},\n\t\t\t{name: \"JavaFX Games\", link: \"https://github.com/JamesNarayanan/JavaFX\"}\n\t\t]\n\t},\n\t{\n\t\tname: \"Python\",\n\t\tcolor: \"#fe0\",\n\t\ticon: pythonLogo,\n\t\tprojects: [\n\t\t\t{\n\t\t\t\tname: \"Tape Detector\",\n\t\t\t\tlink: \"https://github.com/Team41Robotics/tape_detector/\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"C++\",\n\t\tcolor: \"#6196cb\",\n\t\ticon: cppLogo,\n\t\tprojects: [\n\t\t\t{\n\t\t\t\tname: \"2019 FIRST Robotics Code\",\n\t\t\t\tlink: \"https://github.com/Team41Robotics/2019-Robot-Code\"\n\t\t\t}\n\t\t]\n\t}\n];\n\nexport default SwirlElementInfo;\n","import React, {useState} from \"react\";\nimport \"./css/Swirl.css\";\nimport SwirlElement from \"./components/SwirlElement\";\nimport SwirlElementInfo from \"./components/SwirlElementInfo\";\n\nimport {Helmet} from \"react-helmet\";\n\nfunction Swirl() {\n\tconst [scrollY, setScrollY] = useState(0);\n\twindow.addEventListener(\"scroll\", () => {\n\t\tsetScrollY(window.pageYOffset);\n\t});\n\tconst [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\tconst [screenHeight, setScreenHeight] = useState(window.innerHeight);\n\twindow.addEventListener(\"resize\", () => {\n\t\tsetScreenWidth(window.innerWidth);\n\t\tsetScreenHeight(window.innerHeight);\n\t});\n\n\t/** Converts inputted angle from degrees to radians */\n\tconst degToRad = angle => angle * (Math.PI / 180);\n\n\t/** The number pixels of scroll that correspond to one half rotation */\n\tconst pixPerRotate = 2000;\n\n\tvar currentSwirlEl = 0;\n\tvar swirlElements = [];\n\n\t/** Radii of swirl element motion. x is in vw, y is in vh.\n\t * <p>\n\t * x radius shrinks as the screen widens.\n\t * y radius grows as the screen widens.\n\t */\n\tvar radii = {\n\t\tx: 35 - screenWidth / 400,\n\t\ty: 12 + screenHeight / 100\n\t};\n\tif (radii.y > 25) radii.y = 25;\n\n\tconst onLogoClick = i => {\n\t\twindow.scrollTo({top: (pixPerRotate / 2) * i, behavior: \"smooth\"});\n\t};\n\tfor (let i = 0; i < SwirlElementInfo.length; i++) {\n\t\tlet angle = scrollY * (180 / pixPerRotate) + 90 - 90 * i;\n\t\tlet relativeAngle = angle % 360;\n\t\tlet left = `calc(50vw - ${radii.x}vw * ${Math.cos(degToRad(angle))})`;\n\t\tlet top = `calc(50vh - ${radii.y}vh * ${Math.sin(degToRad(angle))})`;\n\t\t/** How far in degrees past the horizontal the icons will continue to fade before disapeearing entirely */\n\t\tlet fadeExtension = 45;\n\t\tlet opacity = `${\n\t\t\tangle >= -fadeExtension && angle <= 180 + fadeExtension\n\t\t\t\t? 1 - Math.abs(90 - relativeAngle) / (90 + fadeExtension)\n\t\t\t\t: 0\n\t\t}`;\n\t\t/** An icon is in focus if it's in the 90Â° closest to the top of the screen */\n\t\tlet inFocus = relativeAngle >= 45 && relativeAngle < 135;\n\n\t\tcurrentSwirlEl = inFocus ? i : currentSwirlEl;\n\n\t\tswirlElements.push(\n\t\t\t<SwirlElement\n\t\t\t\tname={SwirlElementInfo[i].name}\n\t\t\t\ticon={SwirlElementInfo[i].icon}\n\t\t\t\tleft={left}\n\t\t\t\ttop={top}\n\t\t\t\topacity={opacity}\n\t\t\t\tinFocus={inFocus}\n\t\t\t\tprojects={SwirlElementInfo[i].projects}\n\t\t\t\tnumber={i}\n\t\t\t\tscreenWidth={screenWidth}\n\t\t\t\tonLogoClick={onLogoClick}\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Makes background overflow color match background color of the rest of the screen\n\tdocument.documentElement.style.backgroundColor =\n\t\tSwirlElementInfo[currentSwirlEl].color;\n\t// This should be the same length of time as the background transition\n\tdocument.documentElement.style.transition = \"0.5s\";\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>James Narayanan</title>\n\t\t\t</Helmet>\n\t\t\t<div\n\t\t\t\tid=\"longSwirl\"\n\t\t\t\tstyle={{\n\t\t\t\t\theight: `calc(${\n\t\t\t\t\t\t(pixPerRotate / 2) * (swirlElements.length - 1)\n\t\t\t\t\t}px + 100vh)`\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"position-fixed w-100 text-dark\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransition: `0.5s`,\n\t\t\t\t\t\tbackgroundColor: SwirlElementInfo[currentSwirlEl].color,\n\t\t\t\t\t\theight: \"100vh\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{swirlElements}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"position-fixed w-100 text-dark text-center\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: \"5px\",\n\t\t\t\t\t\tfontFamily: \"Bungee Shade\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<a href=\"https://github.com/JamesNarayanan\">James Narayanan</a>\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"position-fixed w-100 text-dark text-center\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbottom: \"5px\",\n\t\t\t\t\t\ttransition: \"0.25s\",\n\t\t\t\t\t\topacity: scrollY < 500 ? 1 : 0\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h3>Scroll down for more!</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Swirl;\n","import React from \"react\";\nimport \"./css/App.css\";\nimport Swirl from \"./Swirl\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Swirl />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}